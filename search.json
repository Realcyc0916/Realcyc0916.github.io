[{"title":"洛谷P7745题解","url":"/2025/02/04/P7745/","content":"调了两个月终于调出来了。\n\n首先看数据范围： $1\\le n \\le 10^5$ 且 $1\\le m\\le 3\\times 10^5$\n\n纯根据题意模拟的 $O(n+mn)$ 肯定过不了\n\n这时候就需要预处理。\n\n### 对于曼哈顿距离，我们可以把它想象成一个点到另一个点的最短路，这边放个图例来方便理解\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/61zo4byi.png)\n\n如图，容易发现：\n\n图上 $x$ 轴距离和为 $1+1=2$，$y$ 轴距离和为$1+2=3$。\n\n$x$ , $y$ 轴距离和相加即为两个控制点到 ROBOT 的曼哈顿距离。\n\n一提到预处理，首先我们想到的是前缀和。\n\n求数组前缀和的方式十分简单，仅需要写一个循环，例如下方代码：\n\n```cpp\nfor(int i = 1; i < anumber; i++)\n    xa[i] = xa[i - 1] + xa[i]; //计算前缀和核心代码，下同\nfor(int i = 1; i < anumber; i++)\n    ya[i] = ya[i - 1] + ya[i];\n```\n\n在得到前缀和后，根据题意，容易得出每次移动对于每个控制点到ROBOT的距离 $+1$ 或 $-1$，我们只需要详细写出 $+1$ 或 $-1$ 即可。\n\n同样的，这边放一个 gif 来演示收到 \"J\" 指令是的操作情况。\n\n![](https://bu.dusays.com/2021/11/16/127e4f7aab5b5.gif)\n(如果 gif 挂了请@或私信我)\n\n举例当指令为 \"S\" 时：\n\n```cpp\nif(s[i] == 'S'){\n    tot += yn[y + zs]; //需要+1的数\n    tot -= (n - yn[y + zs]); //除去需要+1的，即为需要-1的\n    y++; //对应题目\n}\n```\n在一系列例如上方的处理后，我们仅需要提前(在输入每个机器人坐标时)算出初始距离，并对这个初始距离进行加减即可。\n\n写完后发现时间复杂度仅有 $O(n+m)$，可以轻松通过\n\n**当然，此题也可以用 STL 中的 lower_bound 和 upper_bound 写。**\n### 需要注意的是，为防止数组下标为负数，需要给每一个数组下标都加一个常量！\n\n\n","categories":["OI"]},{"title":"CF245E题解","url":"/2025/02/04/CF245E/","content":"~~第一眼看还以为是DP呢。~~\n\n仔细一看，原来是道水题。\n\n## 题意\n\n给定一个带有 \"+\" 与 \"-\" 的字符串，表示这个叫做 \"Binary Cat\" 的咖啡厅的人进出情况。\n\n现在你是个保安，你要根据给你的字符串求出你见到了多少人。\n\n\"+\" 代表进入；\"-\" 代表出去。\n\n## 思路\n\n用两个变量来存在咖啡厅中与咖啡厅外的人，根据题意模拟：\n\n如果读到 \"+\" 则有一个**原本在咖啡厅外的人**进入了咖啡厅。\n\n反之，读到 \"-\" 则有一个**原本在咖啡厅内的人**出了咖啡厅。\n\n**特别地，我们需要注意，在一开始，咖啡厅内或外可能出现没人的情况，则是新来的人**\n\n\n## 代码实现\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\nusing namespace std;\nstring s;\nint main(){\n    cin.tie(0);\n    cout.tie(0);\n    int in = 0, out = 0, len = 0;\n    cin >> s;\n    len = s.length();\n    for(int i = 0; i < len; i++){\n        if(s[i] == '+'){\n            in++;\n            if(out) out--;//特判此时咖啡厅外已经有人\n        }\n        else if(s[i] == '-'){\n            out++;\n            if(in) in--; //特判此时咖啡内外已经有人\n        }\n    }\n    cout << in + out << endl;\n    return 0;\n}\n```\n","categories":["OI"]},{"title":"SP10620题解","url":"/2025/02/04/SP10620/","content":"## 一道基础的贪心思想题目\n\n此题难点并不在代码构造，而在于思想。\n\n根据题意，已知：这 $ n $ 本书的编号为 $ 1 $ 到 $ n $，且无序。\n\n根据题目的排序方式，每一次将其中一本抽出并排到最**上面**(注意理解这个最上面，**此上面非彼上面**)。\n\n## 思路：\n\n倒着遍历数组，且把答案预设为 $n$，如果当前的元素与答案相等，那么则说明这个位置已经拍好，将 $ ans-1 $ 然后继续排序，反之当前元素应该拿到最上面去。\n\n这么做的时间复杂度为 $ O(n) $ ，可以轻松过。\n## AC  Code:\n\n```cpp\n#include <iostream>\nusing namespace std;\nint a[300005], n, ans;\nint main(){\n    cin >> n;\n    for(int i = 1; i <= n; i++){\n        cin>>a[i];\n    }\n    ans=n;//预设ans=n\n    for(int i = n; i >= 1; --i){ //注意是倒着遍历\n        if(ans == a[i]){\n            ans--;//贪心，推导如上\n        }\n    }\n    cout << ans << endl;//输出即可\n    return 0;\n}\n```\n\n\n","categories":["OI"]},{"title":"洛谷P7757题解","url":"/2025/02/04/P7757/","content":"### 一道二分题\n\n#### 如果使用贪心，则会有时间复杂度 $O(m \\log_{} {n})$\n\n#### 因为数据范围 $m \\le 10^9$ 且 $n \\le 10^5$ 所以在最坏情况下会 TLE\n\n所以需要二分优化\n\n什么二分呢\n\n二分法分为二分查找与二分答案，二分查找注重于在一个集合（有序）里找到一个数，而二分答案注重于找到答案，简单来说，就是假设答案再判断对错，做调整\n\n不难写出二分模版\n\n```cpp\nwhile(l < r){\n    mid = (l + r) >> 1;\n    if(check(mid)) r = mid;\n    else l = mid + 1;\n}\n```\n\n这样一来 $O(x)$的复杂度就降到了$O( log\\ x)$\n\n我们只需要根据题意改改模版即可\n\n**此题思路：我们需要计算出每个服务台可办理的人数之和，然后判断是否大于，小于所给人数，进行二分法即可**\n\n\n### AC Code：\n\n```cpp\n#include <iostream>\nusing namespace std;\nlong long n, m, t[100005], ans, l = 1, r;\nint main(){\n    cin >> n >> m;\n    for(int i = 1; i <= n; i++){\n        cin >> t[i];\n        if(t[i] >= r) r = t[i]; //找到集合t中的最大值\n    }\n    r *= m;//人数*服务台的最大时间，得最坏情况\n    long long cnt, mid;\n    while(l < r){//此处也可以用一个函数去写\n        mid = (l + r) >> 1, cnt = 0; //此处mid为l+r的一半\n        //并初始化cnt（用来计数人数之和）为0\n        //(x>>1)=(x/2)\n        for(int i = 1; i <= n; i++) cnt = cnt + mid / t[i]; //计算出每个服务台能办理的人数之和\n        if(cnt >= m) r = mid; //人数之和超过了总人数,使二分范围的最右边变成当前中间值\n        else l = mid + 1;//人数之和不到总人数,使二分范围的最左边变成当前中间值+1（中间值已经判断过）\n    }\n    //二分完的结果是l=r，即最终答案，因此输出l或者r都可以\n    cout << r << endl;\n    return 0;\n}\n```\n\n有哪里说的不对或者不是很好的请提出！谢谢各位！\n\n\n\n","categories":["OI"]}]